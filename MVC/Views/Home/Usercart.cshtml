@{
    ViewBag.Title = "usercart";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>usercart Page</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            gap: 20px;
            padding: 20px;
        }

        .usercart-list {
            list-style-type: none;
            padding: 0;
            width: 100%;
            max-width: 600px;
        }

        .usercart-item {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 10px;
        }

        .usercart-item p {
            margin: 5px 0;
        }

        .usercart-item label {
            font-weight: bold;
        }

        .usercart-item button {
            padding: 5px 10px;
            border: none;
            background-color: #28a745;
            color: white;
            border-radius: 3px;
            cursor: pointer;
        }

        .usercart-item button:hover {
            background-color: #218838;
        }
    </style>
</head>

<body>
    <h1>My Cart Details</h1>
    <ul class="usercart-list" id="usercart-list">
        <!-- usercart items will be added dynamically here -->
    </ul>

    <script>
        function getQueryParams() {
            const params = new URLSearchParams(window.location.search);
            return {
                userid: params.get('UserId'),
            };
        }

        async function fetchusercartDetails(userid) {
            try {
                const response = await fetch(`http://localhost:5014/api/Cart/${userid}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                const usercartData = await response.json();

                const usercartList = document.getElementById('usercart-list');

                // Clear any existing items
                usercartList.innerHTML = '';

                // Loop through each item in the usercart data and create list items
                usercartData.forEach(item => {
                    const listItem = document.createElement('li');
                    listItem.classList.add('usercart-item');

                    listItem.innerHTML = `
                        <p><label>ID:</label> ${item.id}</p>
                        <p><label>Taste:</label> ${item.taste}</p>
                        <p><label>Flavor:</label> ${item.flavor}</p>
                        <p><label>Price:</label> $${item.price}</p>
                        <p><label>Status:</label> ${item.status}</p>
                        <button id="btn-${item.id}" onclick="received(${item.id})">Confirm</button>
                    `;

                    usercartList.appendChild(listItem);
                });

            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
            }
        }

        async function received(itemId) {
            try {
                const response = await fetch(`http://localhost:5014/api/C/${itemId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify("received")
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                alert(result.Message); // Display success message

                // Hide the button after confirmation
                const btn = document.getElementById(`btn-${itemId}`);
                if (btn) {
                    btn.style.display = 'none';
                }

            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
                alert('An error occurred while confirming the usercart item.');
            }
        }

        // Get user ID from query parameters and fetch usercart details
        const params = getQueryParams();
        fetchusercartDetails(params.userid);
    </script>
</body>

</html>
